*,
*::before,
*::after {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'League Spartan', sans-serif;
}
/* It's a special pseudo-class that allows you to declare global CSS variables (also known as CSS
 custom properties) that can be used throughout your entire document. */
:root {

    --dk-violet: hsl(268, 75%, 9%);
    --lt-violet: hsl(268, 47%, 21%);
    --lt-violet2: hsl(281, 89%, 26%);
    --vb-violet: hsl(285, 91%, 52%);
    --vb-violet2: hsl(290, 70%, 36%);
  
    --vb-yellow: hsl(52, 100%, 62%);
  
  
    --pl-white: hsl(0, 0%, 100%);
  
    --vb-cyan: hsl(176, 100%, 44%);
    --vb-cyan2: hsl(177, 92%, 70%);
    --dk-text: hsl(198, 20%, 13%);
}

body {
    width: 100vw;
    height: 100vh;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    background: linear-gradient(90deg, rgba(31, 17, 206, 1) 0%, rgba(229, 43, 43, 1) 100%);
}

.container {
    width: 90%;
    max-width: 450px;
}

h1 {
    color: var(--pl-white);
    opacity: 0.75;
    text-transform: uppercase;
    letter-spacing: 2px;
    text-align: center;
    line-height: 1.2;
}

.display-container {
    /* we write the position relative because we have to overlap the password text and copy button */
    position: relative;
    /* background-color: var(--dk-violet); */
    /* background: #111f4d;  */
    border-radius: 1rem;
    border-top: 0.35rem solid var(--lt-violet2);
    margin: 1rem 0;
    padding-top: 0.35rem;
}


.display {
    width: 100%;
    background-color: transparent;
    padding: 1.15rem 1rem;
    color: var(--vb-yellow);
    font-weight: 600;
    font-size: 1.5rem;
    line-height: 30px;
    letter-spacing: 1px;
    padding-right: 3.25rem;
    border:none;
  }
  
.display::placeholder {
    /* position is absolute because we overlap in display container. Absolute positioning is 
    depend on parent div. So the parent div must be relative  */
    position:absolute;
    top: 50%;
    left: 1.5rem;
    font-size: 1.5rem;
    line-height:30px;
    color:var(--vb-yellow);
    opacity: 0.65;
    text-transform: uppercase;
    transform: translateY(-50%);
}

.display-container button {
    position:absolute;
    top:50%;
    right:1.5rem;
    transform: translateY(-50%);
}

.input-container{
    width:100%;
    /* background-color: var(--dk-violet); */
    /* background: #111f4d;  */
    border-radius: 1rem;
    padding: 2rem;
    border-bottom: 0.35rem solid var(--lt-violet2);
}


.length-container {
    display: flex;
    justify-content: space-between;
    /* align-items: center; */
}

/* there are two p tag in length container. So we can also access in this way.
Like this is the first child ->  p:nth-child(1) */
.length-container p:nth-child(1) {
    color:var(--pl-white);
    font-size: 1.5rem;
}

/* And this is the second child ->  p:nth-child(2) */
.length-container p:nth-child(2) {
    color:var(--vb-yellow);
    font-size: 1.5rem;
}


.Strength-container {
    display: flex;
    justify-content: space-between;
    /* align-items: center; */
    margin-top: 1.75rem;
    margin-bottom: 2rem;
}


.Strength-container p{
    color:var(--pl-white);
    font-size: 1.5rem;
}

.indicator {
    width:1.5rem;
    height:1.5rem;
    border-radius:50%;
}

.generate-button {
    width: 100%;
    padding: 1rem 0;
    background-color: var(--vb-violet);
    text-align: center;
    border-radius: 0.75rem;
    border-bottom: 0.35rem solid var(--vb-yellow);
    text-transform: uppercase;
    letter-spacing: 1px;
    color: var(--vb-yellow);
    font-weight: 600;
    font-size: 1.25rem;
    cursor: pointer;
  }

  .check {
    display: flex;
    /* align-items: center; */
    margin: 1rem 0;
    gap: 0 1rem;
}

/* this is for input tag in check class */
.check input{
    /* appearence is none means I want to change the whole tick box apperance. 
    I don't want any default appearence. So i write this -> appearance: none */
    appearance: none;
    width: 20px;
    height: 20px;
    border: 1px solid var(--vb-cyan);
    cursor: pointer;
    /* relative position means */
    position: relative;
    border-radius: 0.35rem;
}


.check input:checked{
    background-color: var(--vb-cyan);
}

/* When the input is checked, the ::before pseudo-element is created. */
.check input:checked::before {
    content: 'âœ”';
    position: absolute;
    color: var(--dk-text);
    font-size:1.05rem;
    font-weight: 600;
    left:50%;
    top:-3.5px;
    transform: translateX(-50%)  translateY(40%);
}

.check label {
    color: var(--pl-white);
    font-size: 1.25rem;
    letter-spacing: 0.75px;
}

/* This is for copy button */
.copyBtn{
    background-color: transparent;
    border:none;
    outline:none;
    cursor: pointer;
}

.tooltip {
    position: absolute;
    background-color: var(--vb-violet2);
    color: var(--vb-yellow);
    font-size: 1.25rem;
    top: -35px;
    left: -25px;
    padding: 5px 10px;
    border-radius: 1rem;
    opacity: 0;
    transform: scale(0);
    transform-origin: bottom;
    transition: all 250ms ease-in-out;
  }

/* When there is a password, then only it is in active state */
.tooltip.active {
    opacity: 1;
    transform: scale(1);
  }

.slider{
    appearance: none;
    width:100%;
    height: 0.75rem;
    cursor: pointer;
    background-color: var(--lt-violet);
    border-radius: 1rem;
    margin-top: 2rem;
    margin-bottom: 1.5rem;
    background-image: linear-gradient(var(--vb-violet), var(--vb-violet));
    background-repeat: no-repeat;
    border:none;
    outline:none;
    /* z-index:-1; */
}

/* this slider thumb is used in google, microsoft edge browsers */
.slider::-webkit-slider-thumb {
    /* position is relative for not showing the border lines in slider */
    position:relative;
    /* z-index:1; */
    appearance: none;
    height:2rem;
    width:2rem;
    border-radius: 50%;
    background-color: var(--vb-yellow);
    cursor:pointer;
    margin-top: -3px;
    box-shadow: 0px 0px 20px 0px rgba(255, 229, 61, 0.50);
    transition: all 100ms ease-in;
}

/* This is the border line of slider */
.slider:focus{
    outline: 3px solid var(--vb-yellow);
}

.slider::-webkit-slider-thumb:hover{
    outline: 2px solid var(--vb-yellow);
    background-color: var(--dk-violet);
    box-shadow: 0px 0px 25px 5px rgba(255, 229, 61, 0.80);
}


/*Homework -> Explore below code */
/* .slider::-moz-range-thumb {
    position: relative;
    z-index: 1;
    appearance: none;
    height: 2rem;
    width: 2rem;
    border-radius: 50%;
    background: var(--vb-yellow);
    box-shadow: 0px 0px 20px 0px rgba(255, 229, 61, 0.50);
    cursor: pointer;
  }
  
  .slider::-moz-range-thumb:hover {
    outline: 2px solid var(--vb-yellow);
    background-color: var(--dk-violet);
    box-shadow: 0px 0px 25px 5px rgba(255, 229, 61, 0.80);
  } */